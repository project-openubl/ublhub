name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-jdk11:
    name: "JDK 11 Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      - name: Compute cache restore key
        # Always recompute on a push so that the maven repo doesnt grow indefinitely with old versions
        run: |
           if ${{ github.event_name == 'pull_request' }}; then echo "::set-env name=COMPUTED_RESTORE_KEY::q2maven-"; fi
      - name: Cache Maven Repository
        id: cache-maven
        uses: n1hility/cache@v2
        with:
          path: ~/.m2/repository
          # Improves the reusability of the cache to limit key changes
          key: q2maven-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ env.COMPUTED_RESTORE_KEY }}
          restore-only: ${{ github.event_name == 'pull_request' }}
      - name: Build
        run: |
          mvn -e -B  -DskipTests=true -DskipDocs clean install
      - name: Tar Maven Repo
        shell: bash
        run: tar -czvf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v2.3.0
        with:
          name: maven-repo
          path: maven-repo.tgz


  java-artifacts:
    name: Java Artifacts
    needs: build-jdk11
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v2.0.10
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzvf maven-repo.tgz -C ~
      - name: Build with Maven
        run: |
          mvn -DskipTests package
      - name: Prepare XML Sender archive
        shell: bash
        run: |
          find api/target -name 'lib' -o -name 'ublhub-api-*-runner.jar' | tar -czvf ublhub-java-artifacts.tgz -T -
      - name: Upload Archive XML Sender
        uses: actions/upload-artifact@v2.3.0
        with:
          name: ublhub-java-artifacts
          path: 'ublhub-java-artifacts.tgz'


  maven-central:
    name: "Maven Central release"
    needs: build-jdk11
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      - name: Download Maven Repo
        uses: actions/download-artifact@v2.0.10
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzvf maven-repo.tgz -C ~
      - name: Build
        run: |
          mvn -e -B  -DskipTests=true -DskipDocs clean install
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}


  container-images:
    name: Release Container Images
    needs: java-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Java XML Sender Artifacts
        uses: actions/download-artifact@v2.0.10
        with:
          name: ublhub-java-artifacts
          path: .
      - name: Extract Java Artifacs
        shell: bash
        run: tar -xzvf ublhub-java-artifacts.tgz
      - name: Publish to Registry XML Sender (Release tag)
        # Uses sha for added security since tags can be updated
        uses: elgohr/Publish-Docker-Github-Action@b2f63259b466ca5a4be395c392546de447450334
        with:
          name: projectopenubl/ublhub
          dockerfile: api/src/main/docker/Dockerfile.jvm
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true
      - name: Publish to Registry XML Sender (Release latest)
        # Uses sha for added security since tags can be updated
        uses: elgohr/Publish-Docker-Github-Action@b2f63259b466ca5a4be395c392546de447450334
        with:
          name: projectopenubl/ublhub
          dockerfile: api/src/main/docker/Dockerfile.jvm
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [java-artifacts, container-images]
    steps:
      - uses: actions/checkout@v2
      - name: Download Java XML Sender Artifacts
        uses: actions/download-artifact@v2.0.10
        with:
          name: ublhub-java-artifacts
          path: .
      - name: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        id: Changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        # Uses sha for added security since tags can be updated
        uses: actions/create-release@8f324cdc2e5470815db0a286b4b3aa7803c0e6ef
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ublhub-java-artifacts.tgz
          asset_name: jdk-ublhub.tgz
          asset_content_type: application/tar+gzip
